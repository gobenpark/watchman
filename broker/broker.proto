syntax = "proto3";
package broker;

option go_package = "jarvis/scraper/proto/gen/go/broker";

import "broker/order.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service BrokerService {
  rpc Submit(SubmitRequest) returns (SubmitResponse){}
  rpc WatchTransaction(WatchTransactionRequest) returns (stream WatchTransactionResponse) {}
  rpc WatchOrderTransaction(google.protobuf.Empty) returns (stream WatchOrderTransactionResponse) {}
  rpc GetBalance(google.protobuf.Empty) returns (Balance) {}
  rpc GetPosition(google.protobuf.Empty) returns (GetPositionResponse) {}
  rpc GetOrderStatus(google.protobuf.Empty) returns (GetOrderStatusResponse) {}
}

message SubmitResponse {
  Order order = 1;
}

message SubmitRequest {
  Order order = 1;
}

message WatchTransactionRequest {
  string ticker = 1;
}

message WatchTransactionResponse {
  Tick tick = 1;
}

message Tick {
  string ticker = 1;
  double price = 2;
  int64 quantity = 3;
  google.protobuf.Timestamp created = 4;
}


message Balance {
  int64 cash = 1;
}

message GetPositionResponse {

  message Position {
    string ticker = 1;
    //수량
    int64 quantity = 2;
    //평가금액
    double evaluation_price = 3;
    //평균매입가
    double average_price = 4;
    //평가손익
    double profit = 5;
    //수익율
    double rate_of_return = 6;
    double fee = 7;
    double tax = 8;
  }

  //순자산
  double net_asset = 1;
  //총평가금액
  double total_evaluation_price = 2;
  //총평가손익
  double total_profit = 3;
  //실현손익
  double realized_profit = 4;
  repeated Position positions = 5;
}


message WatchOrderTransactionResponse {
  Order order = 1;
  int32 accept_quantity = 2;
  int32 remain_quantity = 3;
}

message GetOrderStatusResponse {
  repeated Order orders = 1;
}